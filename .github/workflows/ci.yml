name: CI

on:
  pull_request:
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y exiftool mupdf-tools

      - name: ESLint Check
        run: pnpm run lint-check

      - name: Format Check
        run: pnpm run format-check

      - name: TypeScript Check
        run: pnpm run type-check

      - name: Install Chrome
        run: pnpm dlx puppeteer browsers install

      - name: Build PDFs
        run: pnpm run build:pdfs

      - name: Build Sitemap
        run: pnpm run build:sitemap

      - name: Run build
        run: pnpm run build

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  deploy-to-cloudflare-pages-staging:
    name: Deploy to Cloudflare Pages Staging
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs:
      - build

    environment:
      name: cloudflare-pages-staging
      url: ${{ steps.deployment.outputs.deployment-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        id: deployment
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dist --project-name=how-to-lookscanned

  deploy-to-cloudflare-pages:
    name: Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs:
      - build
    if: github.event_name == 'release'
    environment:
      name: cloudflare-pages
      url: ${{ steps.deployment.outputs.deployment-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Deploy to Cloudflare Pages Release
        uses: cloudflare/wrangler-action@v3
        id: deployment
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dist --project-name=how-to-lookscanned --branch=release

  deploy-to-github-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs:
      - build
    if: github.event_name == 'release'
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: 'dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  publish-to-npm:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs:
      - build
    if: github.event_name == 'release'
    environment:
      name: npm
      url: https://www.npmjs.com/package/@lookscanned/how-to
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: pnpm install

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish Assets
        run: pnpm publish --provenance --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-to-github-packages:
    name: Publish to GitHub Packages
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v5

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: https://npm.pkg.github.com/

      - name: Install dependencies
        run: pnpm install

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

  upload-release:
    name: Upload Assets to Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    permissions:
      contents: write
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Zip dist directory
        run: zip -r dist.zip dist

      - name: Upload Release Asset
        uses: svenstaro/upload-release-action@v2
        with:
          file: dist.zip
          overwrite: true
